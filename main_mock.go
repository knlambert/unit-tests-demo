// Code generated by MockGen. DO NOT EDIT.
// Source: main.go

// Package main is a generated GoMock package.
package main

import (
	fs "io/fs"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIPGetter is a mock of IPGetter interface.
type MockIPGetter struct {
	ctrl     *gomock.Controller
	recorder *MockIPGetterMockRecorder
}

// MockIPGetterMockRecorder is the mock recorder for MockIPGetter.
type MockIPGetterMockRecorder struct {
	mock *MockIPGetter
}

// NewMockIPGetter creates a new mock instance.
func NewMockIPGetter(ctrl *gomock.Controller) *MockIPGetter {
	mock := &MockIPGetter{ctrl: ctrl}
	mock.recorder = &MockIPGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIPGetter) EXPECT() *MockIPGetterMockRecorder {
	return m.recorder
}

// GetPublicIP mocks base method.
func (m *MockIPGetter) GetPublicIP() (*string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPublicIP")
	ret0, _ := ret[0].(*string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPublicIP indicates an expected call of GetPublicIP.
func (mr *MockIPGetterMockRecorder) GetPublicIP() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPublicIP", reflect.TypeOf((*MockIPGetter)(nil).GetPublicIP))
}

// MockFileWriter is a mock of FileWriter interface.
type MockFileWriter struct {
	ctrl     *gomock.Controller
	recorder *MockFileWriterMockRecorder
}

// MockFileWriterMockRecorder is the mock recorder for MockFileWriter.
type MockFileWriterMockRecorder struct {
	mock *MockFileWriter
}

// NewMockFileWriter creates a new mock instance.
func NewMockFileWriter(ctrl *gomock.Controller) *MockFileWriter {
	mock := &MockFileWriter{ctrl: ctrl}
	mock.recorder = &MockFileWriterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFileWriter) EXPECT() *MockFileWriterMockRecorder {
	return m.recorder
}

// Write mocks base method.
func (m *MockFileWriter) Write(filename string, data []byte, perm fs.FileMode) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Write", filename, data, perm)
	ret0, _ := ret[0].(error)
	return ret0
}

// Write indicates an expected call of Write.
func (mr *MockFileWriterMockRecorder) Write(filename, data, perm interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Write", reflect.TypeOf((*MockFileWriter)(nil).Write), filename, data, perm)
}
